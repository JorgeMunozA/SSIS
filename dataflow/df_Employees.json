{
	"name": "df_Employees",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSql",
						"type": "DatasetReference"
					},
					"name": "SourceDataset",
					"description": "HumanResourcesEmployees"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          BusinessEntityID as integer,",
				"          NationalIDNumber as string,",
				"          LoginID as string,",
				"          OrganizationNode as binary,",
				"          OrganizationLevel as short,",
				"          JobTitle as string,",
				"          BirthDate as date,",
				"          MaritalStatus as string,",
				"          Gender as string,",
				"          HireDate as date,",
				"          SalariedFlag as boolean,",
				"          VacationHours as short,",
				"          SickLeaveHours as short,",
				"          CurrentFlag as boolean,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT [BusinessEntityID]\\n      ,[NationalIDNumber]\\n      ,[LoginID]\\n      ,[OrganizationNode]\\n      ,[OrganizationLevel]\\n      ,[JobTitle]\\n      ,[BirthDate]\\n      ,[MaritalStatus]\\n      ,[Gender]\\n      ,[HireDate]\\n      ,[SalariedFlag]\\n      ,[VacationHours]\\n      ,[SickLeaveHours]\\n      ,[CurrentFlag]\\n      ,[rowguid]\\n      ,[ModifiedDate]\\n  FROM [HumanResources].[Employee]\\n',",
				"     format: 'query') ~> SourceDataset",
				"SourceDataset aggregate(groupBy(Gender,",
				"          JobTitle),",
				"     LoginID = count(1),",
				"          VacationHours = sum(VacationHours),",
				"          SickLeaveHours = sum(SickLeaveHours)) ~> aggregate1",
				"aggregate1 sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: true,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}